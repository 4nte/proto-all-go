// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beta/b.proto

package proto_all_go

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BetaTest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetaTest) Reset()         { *m = BetaTest{} }
func (m *BetaTest) String() string { return proto.CompactTextString(m) }
func (*BetaTest) ProtoMessage()    {}
func (*BetaTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d02c070b1df196b1, []int{0}
}

func (m *BetaTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetaTest.Unmarshal(m, b)
}
func (m *BetaTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetaTest.Marshal(b, m, deterministic)
}
func (m *BetaTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetaTest.Merge(m, src)
}
func (m *BetaTest) XXX_Size() int {
	return xxx_messageInfo_BetaTest.Size(m)
}
func (m *BetaTest) XXX_DiscardUnknown() {
	xxx_messageInfo_BetaTest.DiscardUnknown(m)
}

var xxx_messageInfo_BetaTest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*BetaTest)(nil), "beta.BetaTest")
}

func init() { proto.RegisterFile("beta/b.proto", fileDescriptor_d02c070b1df196b1) }

var fileDescriptor_d02c070b1df196b1 = []byte{
	// 88 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4a, 0x2d, 0x49,
	0xd4, 0x4f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xf1, 0x94, 0xb8, 0xb8, 0x38,
	0x9c, 0x52, 0x4b, 0x12, 0x43, 0x52, 0x8b, 0x4b, 0x9c, 0xe4, 0xa2, 0x64, 0xd2, 0x33, 0x4b, 0x32,
	0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x4d, 0xf2, 0x4a, 0x52, 0xf5, 0xc1, 0x4a, 0x75, 0x13,
	0x73, 0x72, 0x74, 0xd3, 0xf3, 0x93, 0xd8, 0xc0, 0x3c, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0xfc, 0xf2, 0x0a, 0x48, 0x00, 0x00, 0x00,
}
